@using Timely.Models
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.AddAlarm" Class="mr-3 mb-n1"/>
            Add Record
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudDatePicker bind-Date="@_date" Label="Date"></MudDatePicker>
        <MudTimePicker MinuteSelectionStep="5" PickerVariant="PickerVariant.Dialog" AmPm="true" @bind-Time="@Shift.ShiftStart" Label="Shift Start"/>
        <MudTimePicker MinuteSelectionStep="5" PickerVariant="PickerVariant.Dialog" AmPm="true" @bind-Time="@Shift.ShiftEnd" Label="Shift End"/>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddRecord">Add</MudButton>
    </DialogActions>
</MudDialog>

@code {

    private DateTime? _date = DateTime.Today;
    
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Shift Shift { get; set; } = new();
    
    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void AddRecord()
    {
        Shift.Date = _date is not null ? DateTime.Today : _date!.Value;
        MudDialog.Close(DialogResult.Ok(Shift));
    }

}