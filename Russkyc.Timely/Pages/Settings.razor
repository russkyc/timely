@using BlazorComponentBus
@using Blazored.LocalStorage
@using Magic.IndexedDb
@using Russkyc.Timely.Models.Constants
@using Russkyc.Timely.Models.Events
<MudStack Spacing="4" Class="grow min-h-full flex flex-col">
    <MudText Class="text-2xl font-black">Settings</MudText>
    <MudStack Spacing="4" Class="grow h-0 min-h-full overflow-y-auto">
        <MudStack Spacing="3">
            <MudText Class="text-xl font-medium">About</MudText>
            <MudPaper Elevation="0" Class="p-10 rounded-lg border">
                <MudStack Spacing="3" Class="flex flex-col">
                    <MudImage Class="mx-auto w-24 h-24" Src="/icons/timely.png"/>
                    <MudStack Class="my-auto" Spacing="0">
                        <MudText Class="mx-auto text-xl font-medium">Timely - Time Tracker</MudText>
                        <MudText Class="mx-auto text-lg opacity-75">@("@russkyc")</MudText>
                        <MudLink Class="mx-auto font-bold mt-4" Href="https://github.com/russkyc/timely">
                            <MudStack Spacing="1" Class="flex flex-row" Row="true">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                     fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                     stroke-linejoin="round" class="lucide lucide-github">
                                    <path
                                        d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"/>
                                    <path d="M9 18c-4.51 2-5-2-7-2"/>
                                </svg>
                                <MudText Class="my-auto font-bold">github repo</MudText>
                            </MudStack>
                        </MudLink>
                    </MudStack>
                </MudStack>
            </MudPaper>
        </MudStack>
        @*<MudStack Spacing="3">
            <MudText Class="text-xl font-medium">Weekdays</MudText>
            <MudPaper Elevation="0" Class="p-4 rounded-lg border">
                <MudStack Row="true" Spacing="0" Class="flex flex-row">
                    <MudStack Class="my-auto" Spacing="0">
                        <MudText Class="opacity-75">Work hours start</MudText>
                        <MudText Class="text-xl font-medium">8:30 AM</MudText>
                    </MudStack>
                    <MudSpacer/>
                    <MudButton Class="my-auto py-2" Size="Size.Small" DropShadow="false" Variant="Variant.Filled" Color="Color.Primary">
                        <MudText>Update</MudText>
                    </MudButton>
                </MudStack>
            </MudPaper>
            <MudPaper Elevation="0" Class="p-4 rounded-lg border">
                <MudStack Row="true" Spacing="0" Class="flex flex-row">
                    <MudStack Class="my-auto" Spacing="0">
                        <MudText Class="opacity-75">Work hours end</MudText>
                        <MudText Class="text-xl font-medium">8:30 AM</MudText>
                    </MudStack>
                    <MudSpacer/>
                    <MudButton Class="my-auto py-2" Size="Size.Small" DropShadow="false" Variant="Variant.Filled" Color="Color.Primary">
                        <MudText>Update</MudText>
                    </MudButton>
                </MudStack>
            </MudPaper>
        </MudStack>*@
        @*<MudStack Spacing="3">
            <MudText Class="text-xl font-medium">Weekends</MudText>
            <MudPaper Elevation="0" Class="p-4 rounded-lg border">
                <MudStack Row="true" Spacing="0" Class="flex flex-row">
                    <MudStack Class="my-auto" Spacing="0">
                        <MudText Class="opacity-75">Work hours start</MudText>
                        <MudText Class="text-xl font-medium">8:30 AM</MudText>
                    </MudStack>
                    <MudSpacer/>
                    <MudButton Class="my-auto py-2" Size="Size.Small" DropShadow="false" Variant="Variant.Filled" Color="Color.Primary">
                        <MudText>Update</MudText>
                    </MudButton>
                </MudStack>
            </MudPaper>
            <MudPaper Elevation="0" Class="p-4 rounded-lg border">
                <MudStack Row="true" Spacing="0" Class="flex flex-row">
                    <MudStack Class="my-auto" Spacing="0">
                        <MudText Class="opacity-75">Work hours end</MudText>
                        <MudText Class="text-xl font-medium">8:30 AM</MudText>
                    </MudStack>
                    <MudSpacer/>
                    <MudButton Class="my-auto py-2" Size="Size.Small" DropShadow="false" Variant="Variant.Filled" Color="Color.Primary">
                        <MudText>Update</MudText>
                    </MudButton>
                </MudStack>
            </MudPaper>
        </MudStack>*@
        <MudStack Spacing="3">
            <MudText Class="text-xl font-medium">Data</MudText>
            <MudPaper Elevation="0" Class="p-4 rounded-lg border">
                <MudStack Row="true" Spacing="0" Class="flex flex-row">
                    <MudStack Class="my-auto" Spacing="0">
                        <MudText Class="opacity-75">Storage Usage</MudText>
                        <MudText Class="text-xl font-medium">@_storageEstimate.ToString("0.## MB")</MudText>
                    </MudStack>
                    <MudSpacer/>
                    <MudButton Disabled="@(!_canClearData)" OnClick="@ShowDeleteConfirmation" Class="my-auto py-2"
                               Size="Size.Small" DropShadow="false"
                               Variant="Variant.Filled" Color="Color.Error">
                        <MudText>Clear Data</MudText>
                    </MudButton>
                </MudStack>
            </MudPaper>
        </MudStack>
    </MudStack>
</MudStack>
<MudOverlay Class="flex flex-col p-2" Visible="@_showDeleteConfirmation" LightBackground="true">
    <Animation Class="flex w-dvw h-dvh" Effect="@Effect.FadeInUp" Speed="@TimeSpan.FromMilliseconds(240)"
               Delay="@Delay.None" Enabled="true">
        <MudPaper Elevation="0" Class="rounded-lg mx-4 mt-auto mb-4 flex flex-col p-4 w-full h-96 border">
            <MudStack Class="flex flex-col grow">
                <MudItem Class="flex flex-col grow">
                    <MudItem Class="flex flex-col grow">
                        <MudStack Class="flex m-auto text-[var(--mud-palette-error)]" Spacing="4">
                            <svg xmlns="http://www.w3.org/2000/svg" width="72" height="72" viewBox="0 0 24 24"
                                 fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                 stroke-linejoin="round" class="mx-auto lucide lucide-clipboard-x">
                                <rect width="8" height="4" x="8" y="2" rx="1" ry="1"/>
                                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"/>
                                <path d="m15 11-6 6"/>
                                <path d="m9 11 6 6"/>
                            </svg>
                            <MudText Class="text-2xl font-medium text-center mx-6">Delete all time record data?</MudText>
                        </MudStack>
                    </MudItem>
                </MudItem>
                <MudButton OnClick="@ClearData" FullWidth="true" DropShadow="false" Size="Size.Large"
                           Color="Color.Error" Variant="Variant.Filled">
                    <MudText Class="font-medium text-lg">Delete</MudText>
                </MudButton>
                <MudButton OnClick="@HideDeleteConfirmation" FullWidth="true" DropShadow="false" Size="Size.Large"
                           Color="Color.Default" Variant="Variant.Text">
                    <MudText Class="font-medium text-lg">Cancel</MudText>
                </MudButton>
            </MudStack>
        </MudPaper>
    </Animation>
</MudOverlay>

@inject ComponentBus Bus
@inject ISyncLocalStorageService LocalStorage

@code {

    private bool _canClearData;
    private double _storageEstimate;

    private bool _showDeleteConfirmation;

    [CascadingParameter] IndexedDbManager IndexedDbManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var storageEstimate = await IndexedDbManager.GetStorageEstimateAsync();
        _storageEstimate = storageEstimate.usage;

        if (LocalStorage.ContainKey(StringValues.ClockedInStoreId))
        {
            var clockedIn = LocalStorage.GetItem<bool>(StringValues.ClockedInStoreId);
            _canClearData = !clockedIn;
        }
        else
        {
            _canClearData = true;
        }

        Bus.Subscribe<SetClockedInEvent>(OnClockedInHandler);

        await InvokeAsync(StateHasChanged);
    }

    void ShowDeleteConfirmation()
    {
        _showDeleteConfirmation = true;
    }

    void HideDeleteConfirmation()
    {
        _showDeleteConfirmation = false;
    }

    private async Task OnClockedInHandler(MessageArgs message, CancellationToken token)
    {
        var messageValue = message.GetMessage<SetClockedInEvent>();
        _canClearData = !messageValue.ClockedIn;
        await InvokeAsync(StateHasChanged);
    }

    async Task ClearData()
    {
        await IndexedDbManager.DeleteDbAsync(StringValues.IndexedDbStoreId);

        await IndexedDbManager.OpenDb();
        await InvokeAsync(StateHasChanged);
        await Bus.Publish(new ClearedDataEvent());

        if (_showDeleteConfirmation)
        {
            HideDeleteConfirmation();
        }
    }

}